{"ast":null,"code":"import _objectSpread from \"/Users/howeyang/Coding/react/devlog/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/howeyang/Coding/react/devlog/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/howeyang/Coding/react/devlog/src/TopDrawer.js\";\nimport React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\nconst classes = useStyles();\n\nconst _React$useState = React.useState({\n  top: false,\n  left: false,\n  bottom: false,\n  right: false\n}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\nconst toggleDrawer = (side, open) => event => {\n  if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n    return;\n  }\n\n  setState(_objectSpread({}, state, {\n    [side]: open\n  }));\n};\n\nconst sideList = side => React.createElement(\"div\", {\n  className: classes.list,\n  role: \"presentation\",\n  onClick: toggleDrawer(side, false),\n  onKeyDown: toggleDrawer(side, false),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(List, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => React.createElement(ListItem, {\n  button: true,\n  key: text,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(ListItemIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, index % 2 === 0 ? React.createElement(InboxIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}) : React.createElement(MailIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n})), React.createElement(ListItemText, {\n  primary: text,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n})))), React.createElement(Divider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}), React.createElement(List, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, [\"All mail\", \"Trash\", \"Spam\"].map((text, index) => React.createElement(ListItem, {\n  button: true,\n  key: text,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, React.createElement(ListItemIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, index % 2 === 0 ? React.createElement(InboxIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}) : React.createElement(MailIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n})), React.createElement(ListItemText, {\n  primary: text,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n})))));\n\nconst fullList = side => React.createElement(\"div\", {\n  className: classes.fullList,\n  role: \"presentation\",\n  onClick: toggleDrawer(side, false),\n  onKeyDown: toggleDrawer(side, false),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, React.createElement(List, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => React.createElement(ListItem, {\n  button: true,\n  key: text,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, React.createElement(ListItemIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}, index % 2 === 0 ? React.createElement(InboxIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}) : React.createElement(MailIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n})), React.createElement(ListItemText, {\n  primary: text,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n})))), React.createElement(Divider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}), React.createElement(List, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, [\"All mail\", \"Trash\", \"Spam\"].map((text, index) => React.createElement(ListItem, {\n  button: true,\n  key: text,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, React.createElement(ListItemIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, index % 2 === 0 ? React.createElement(InboxIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}) : React.createElement(MailIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n})), React.createElement(ListItemText, {\n  primary: text,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n})))));\n\nclass TopDrawer extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: toggleDrawer(\"left\", true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Open Left\"), React.createElement(Button, {\n      onClick: toggleDrawer(\"right\", true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Open Right\"), React.createElement(Button, {\n      onClick: toggleDrawer(\"top\", true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Open Top\"), React.createElement(Button, {\n      onClick: toggleDrawer(\"bottom\", true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Open Bottom\"), React.createElement(Drawer, {\n      open: state.left,\n      onClose: toggleDrawer(\"left\", false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, sideList(\"left\")), React.createElement(Drawer, {\n      anchor: \"top\",\n      open: state.top,\n      onClose: toggleDrawer(\"top\", false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, fullList(\"top\")), React.createElement(Drawer, {\n      anchor: \"bottom\",\n      open: state.bottom,\n      onClose: toggleDrawer(\"bottom\", false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, fullList(\"bottom\")), React.createElement(Drawer, {\n      anchor: \"right\",\n      open: state.right,\n      onClose: toggleDrawer(\"right\", false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, sideList(\"right\")));\n  }\n\n}\n\nexport default TopDrawer;","map":{"version":3,"sources":["/Users/howeyang/Coding/react/devlog/src/TopDrawer.js"],"names":["React","Component","makeStyles","Drawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","useStyles","list","width","fullList","classes","useState","top","left","bottom","right","state","setState","toggleDrawer","side","open","event","type","key","sideList","map","text","index","TopDrawer","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\n\nconst classes = useStyles();\nconst [state, setState] = React.useState({\n  top: false,\n  left: false,\n  bottom: false,\n  right: false\n});\n\nconst toggleDrawer = (side, open) => event => {\n  if (\n    event.type === \"keydown\" &&\n    (event.key === \"Tab\" || event.key === \"Shift\")\n  ) {\n    return;\n  }\n\n  setState({ ...state, [side]: open });\n};\n\nconst sideList = side => (\n  <div\n    className={classes.list}\n    role=\"presentation\"\n    onClick={toggleDrawer(side, false)}\n    onKeyDown={toggleDrawer(side, false)}\n  >\n    <List>\n      {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n        <ListItem button key={text}>\n          <ListItemIcon>\n            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n          </ListItemIcon>\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n    </List>\n    <Divider />\n    <List>\n      {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n        <ListItem button key={text}>\n          <ListItemIcon>\n            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n          </ListItemIcon>\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n    </List>\n  </div>\n);\n\nconst fullList = side => (\n  <div\n    className={classes.fullList}\n    role=\"presentation\"\n    onClick={toggleDrawer(side, false)}\n    onKeyDown={toggleDrawer(side, false)}\n  >\n    <List>\n      {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n        <ListItem button key={text}>\n          <ListItemIcon>\n            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n          </ListItemIcon>\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n    </List>\n    <Divider />\n    <List>\n      {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n        <ListItem button key={text}>\n          <ListItemIcon>\n            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n          </ListItemIcon>\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n    </List>\n  </div>\n);\n\nclass TopDrawer extends Component {\n  render() {\n    return (\n      <div>\n        <Button onClick={toggleDrawer(\"left\", true)}>Open Left</Button>\n        <Button onClick={toggleDrawer(\"right\", true)}>Open Right</Button>\n        <Button onClick={toggleDrawer(\"top\", true)}>Open Top</Button>\n        <Button onClick={toggleDrawer(\"bottom\", true)}>Open Bottom</Button>\n        <Drawer open={state.left} onClose={toggleDrawer(\"left\", false)}>\n          {sideList(\"left\")}\n        </Drawer>\n        <Drawer\n          anchor=\"top\"\n          open={state.top}\n          onClose={toggleDrawer(\"top\", false)}\n        >\n          {fullList(\"top\")}\n        </Drawer>\n        <Drawer\n          anchor=\"bottom\"\n          open={state.bottom}\n          onClose={toggleDrawer(\"bottom\", false)}\n        >\n          {fullList(\"bottom\")}\n        </Drawer>\n        <Drawer\n          anchor=\"right\"\n          open={state.right}\n          onClose={toggleDrawer(\"right\", false)}\n        >\n          {sideList(\"right\")}\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default TopDrawer;\n"]},"metadata":{},"sourceType":"module"}