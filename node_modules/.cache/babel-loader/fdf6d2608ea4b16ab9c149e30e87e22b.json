{"ast":null,"code":"var _jsxFileName = \"/Users/howeyang/Coding/react/devlog/src/ProjectAutoBattler.js\";\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass ProjectAutoBattler extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"white1 underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \" \", \"Project: \", React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Auto Battler\"), \" \"), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"stretch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"black2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \" Introduction\"), React.createElement(\"p\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Around January 2019, I started playing a Custom Game mode in Dota 2 that was taking the gaming community by storm, Dota Autochess by Studio Drodo. The game mode was a polished version built ontop of Pokemon TD from Warcraft3 and Casino TD from Starcraft 2. When playing the game, I was inspired create a single-player spin on the game. I got to work to paper prototype and began to bring my vision to life in Unity.\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      className: \"overlay2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"black2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \" Latest version \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Haitus\")), React.createElement(\"p\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Insert Image here : https://www.npmjs.com/package/react-responsive-carousel\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"black2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" Challenges and Components\"), React.createElement(\"p\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Building the board\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), \"The board / grid in which the player's units and enemy control units fight on was a big challenge to tackle. I started with a naive String Array implementation with the intention of storing their placement but it was effectively useless.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), \" I created a node struct and began to build a grid of nodes which had references to their neighbours and able to do simple heuristic pathing to other nodes via the A* Algorithim.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Creating AI and Autonomous combat\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), \"Performance and synchronous combat was a big concern for me that I coded the AI script with no Update logic. Instead, all units relied on the board script to invoke an Stepping function which make it run through it's logic. This created a coupling between the board and all units but significantly reduced performance concerns and allowed a sequential resolution of action and behaviours.\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      className: \"overlay2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"black2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" Sample Title\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"black2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" Lessons Learned\"), React.createElement(\"p\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"In all honesty, not sure who would read this far, but this project was probably the most feature complete and playable game I built since University.\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      className: \"overlay2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"black2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" Sample Title\"), React.createElement(\"p\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Inset Image here : https://www.npmjs.com/package/react-responsive-carousel\"))));\n  }\n\n}\n\nexport default ProjectAutoBattler;","map":{"version":3,"sources":["/Users/howeyang/Coding/react/devlog/src/ProjectAutoBattler.js"],"names":["React","Component","Grid","ProjectAutoBattler","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass ProjectAutoBattler extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"white1 underline\">\n          {\" \"}\n          Project: <a>Auto Battler</a>{\" \"}\n        </div>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\n          <Grid item xs={12} sm={6} md={6}>\n            <div className=\"black2\"> Introduction</div>\n\n            <p className=\"section\">\n              Around January 2019, I started playing a Custom Game mode in Dota\n              2 that was taking the gaming community by\n              storm, Dota Autochess by Studio Drodo. The game mode was a\n              polished version built ontop of Pokemon TD from Warcraft3 and\n              Casino TD from Starcraft 2. When playing the game, I was inspired\n              create a single-player spin on the game. I got to work to paper\n              prototype and began to bring my vision to life in Unity.\n            </p>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6} className=\"overlay2\">\n            <div className=\"black2\"> Latest version <p>Haitus</p></div> \n            <p className=\"section\">\n              Insert Image here :\n              https://www.npmjs.com/package/react-responsive-carousel\n            </p>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div className=\"black2\"> Challenges and Components</div>\n\n            <p className=\"section\">\n              <label>Building the board</label> <br />\n              The board / grid in which the player's units and enemy control\n              units fight on was a big challenge to tackle. I started with a\n              naive String Array implementation with the intention of storing\n              their placement but it was effectively useless.\n              <br /> I created a node struct and began to build a grid of nodes\n              which had references to their neighbours and able to do simple\n              heuristic pathing to other nodes via the A* Algorithim.\n              <br />\n              <label>Creating AI and Autonomous combat</label> <br />\n               Performance and synchronous combat was a big concern for me that I coded the AI script with no Update logic. Instead, all units relied on the board script to invoke an Stepping function which make it run through it's logic. This created a coupling between the board and all units but significantly reduced performance concerns and allowed a sequential resolution of action and behaviours.\n            </p>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6} className=\"overlay2\">\n            <div className=\"black2\"> Sample Title</div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div className=\"black2\"> Lessons Learned</div>\n\n            <p className=\"section\">\n              In all honesty, not sure who would read this far, but this project\n              was probably the most feature complete and playable game I built\n              since University.\n            </p>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6} className=\"overlay2\">\n            <div className=\"black2\"> Sample Title</div>\n            <p className=\"section\">\n              Inset Image here :\n              https://www.npmjs.com/package/react-responsive-carousel\n            </p>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default ProjectAutoBattler;\n"]},"metadata":{},"sourceType":"module"}