{"ast":null,"code":"var _jsxFileName = \"/Users/howeyang/Github/howeyang.github.io/src/ProjectAutoBattler.js\";\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ReactPlayer from \"react-player\";\nimport Fade from \"react-reveal/Fade\";\nimport AutoBattleCarousel from \"./AutoBattleCarousel\";\n\nclass ProjectAutoBattler extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Fade, {\n      down: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"white1 underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \" \", \"Project: \", React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Auto Battler\"), \" \")), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"stretch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Fade, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"black3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \" Introduction\")), React.createElement(Fade, {\n      left: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"The Prompt\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), \"Around January 2019, I started playing a custom game mode in Dota 2 that was taking the gaming community by storm, Dota Autochess by Studio Drodo. The game mode itself was inspired by older custom games: Pokemon TD from Warcraft3 and Casino TD from Starcraft 2. When playing the game, I was inspired to create a single-player spin on the game. Thus, I got to work to paper prototyping and began to bring my vision to life in Unity.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), \" \", React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"The Project Goal\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), \"My Project was to create a Minimal Viable Product that would contain the core features : autonomous combat, unit placement and combination. From there, add enough polish it to the point where I could be proud of it.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), \" \", React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Summary\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), \"I learned a lot from this project: coding Combat AI and pathfinding, using Unity's Mecanim Animation System, placing Environmental assets and all the small things that contribute to polish.\"))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      className: \"overlay2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Fade, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"black3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \" \", \"Latest version \", React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"On haitus\"))), React.createElement(Fade, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(ReactPlayer, {\n      url: \"autobattle.mp4\",\n      width: \"100%\",\n      height: \"100%\",\n      controls: true,\n      playing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Fade, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"black3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Challenges and Components\")), React.createElement(Fade, {\n      left: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Building the board\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), \"The board / grid in which the player's units and enemy control units fight on was a big challenge to tackle. I started with a naive String Array implementation with the intention of storing their placement but I quickly felt it's limitations.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), \" To gain more functionality, I created a Node struct and began to build a grid of Nodes. The Node data structure allowed me to store data, hold references to their neighbours and able to do simple heuristic pathing to other nodes via the A* Algorithim.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Creating AI and Autonomous combat\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \"Creating the AI for the game meant building a modular script that could run independantly in each game unit. Performance and synchronous combat was a big concern for me. This lead me to coding the AI script with no Update logic. Instead, all units relied on the board script to invoke a Stepping function which make it run through it's logic. The downside of this was creating a tight coupling between the board and all units. The upside of this was significantly reduced performance concerns and allowed a sequential resolution of action and behaviours.\"))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      className: \"overlay2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"black3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Development Snapshots\"), React.createElement(AutoBattleCarousel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"black3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Lessons Learned\"), React.createElement(\"p\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Over Designing\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), \"I often kept going back to paper prototyping certain features / concepts. Although this invigorated myself to keep working at this project, very few of what I designed and thought of made it into the prototype build. My lack of focus on and over designing non-essential features wasted a lot of time and brain power.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), \" \", React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Too Tight Coupling\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), \"This sucked\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \" \", React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Monolithic or Tiny\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \"Moderation or finding the right balance is something that I will try to work towards.\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      className: \"overlay2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"black3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" Future Considerations\"), React.createElement(\"p\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"This project was probably the most feature complete and playable game I built since university. It was a good exercise for planning, coding and execution. Quick code prototyping definitely helps to put something together but it is necessary to identify what code should be generic, flexible and readable and re-write the code. Hopefully, I can apply what I learned here to future projects!\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Thank you for reading!\")))));\n  }\n\n}\n\nexport default ProjectAutoBattler;","map":{"version":3,"sources":["/Users/howeyang/Github/howeyang.github.io/src/ProjectAutoBattler.js"],"names":["React","Component","Grid","ReactPlayer","Fade","AutoBattleCarousel","ProjectAutoBattler","componentDidMount","window","scrollTo","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ReactPlayer from \"react-player\";\nimport Fade from \"react-reveal/Fade\";\nimport AutoBattleCarousel from \"./AutoBattleCarousel\";\n\nclass ProjectAutoBattler extends Component {\n\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  render() {\n    return (\n      <div>\n        <Fade down>\n        <div className=\"white1 underline\">\n          {\" \"}\n          Project: <a>Auto Battler</a>{\" \"}\n        </div>\n        </Fade>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\n          <Grid item xs={12} sm={6} md={6}>\n          <Fade >\n            <div className=\"black3\"> Introduction</div>\n          </Fade><Fade left>\n            <p className=\"section\">\n              <label>The Prompt</label> <br />\n              Around January 2019, I started playing a custom game mode in Dota\n              2 that was taking the gaming community by storm, Dota Autochess by\n              Studio Drodo. The game mode itself was inspired by older custom\n              games: Pokemon TD from Warcraft3 and Casino TD from Starcraft 2.\n              When playing the game, I was inspired to create a single-player\n              spin on the game. Thus, I got to work to paper prototyping and\n              began to bring my vision to life in Unity.\n              <br /> <label>The Project Goal</label> <br />\n              My Project was to create a Minimal Viable Product that would\n              contain the core features : autonomous combat, unit placement and\n              combination. From there, add enough polish it to the point where I\n              could be proud of it.\n              <br /> <label>Summary</label> <br />I learned a lot from this\n              project: coding Combat AI and pathfinding, using Unity's Mecanim Animation\n              System, placing Environmental assets and all the small things that\n              contribute to polish.\n            </p>\n            </Fade>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6} className=\"overlay2\">\n          <Fade>\n            <div className=\"black3\">\n              {\" \"}\n              Latest version <a>On haitus</a>\n            </div>\n            </Fade>\n            <Fade right>\n              \n            <div className=\"section\">\n              <ReactPlayer\n                url=\"autobattle.mp4\"\n                width=\"100%\"\n                height=\"100%\"\n                controls={true}\n                playing={true}\n              />\n            </div>\n\n            </Fade>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n          <Fade>\n            <div className=\"black3\">Challenges and Components</div>\n            </Fade>\n            <Fade left>\n            <p className=\"section\">\n              <label>Building the board</label> <br />\n              The board / grid in which the player's units and enemy control\n              units fight on was a big challenge to tackle. I started with a\n              naive String Array implementation with the intention of storing\n              their placement but I quickly felt it's limitations.\n              <br /> To gain more functionality, I created a Node struct and\n              began to build a grid of Nodes. The Node data structure allowed me\n              to store data, hold references to their neighbours and able to do\n              simple heuristic pathing to other nodes via the A* Algorithim.\n              <br />\n              <label>Creating AI and Autonomous combat</label> <br />\n              Creating the AI for the game meant building a modular script that\n              could run independantly in each game unit. Performance and\n              synchronous combat was a big concern for me. This lead me to\n              coding the AI script with no Update logic. Instead, all units\n              relied on the board script to invoke a Stepping function which\n              make it run through it's logic. The downside of this was creating\n              a tight coupling between the board and all units. The upside of\n              this was significantly reduced performance concerns and allowed a\n              sequential resolution of action and behaviours.\n            </p>\n            </Fade>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6} className=\"overlay2\">\n            <div className=\"black3\">Development Snapshots</div>\n            <AutoBattleCarousel />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div className=\"black3\">Lessons Learned</div>\n\n            <p className=\"section\">\n              <label>Over Designing</label> <br />\n              I often kept going back to paper prototyping certain features /\n              concepts. Although this invigorated myself to keep working at this\n              project, very few of what I designed and thought of made it into\n              the prototype build. My lack of focus on and over designing\n              non-essential features wasted a lot of time and brain power.\n              <br /> <label>Too Tight Coupling</label> <br />\n              This sucked\n              <br /> <label>Monolithic or Tiny</label> <br />\n              Moderation or finding the right balance is something that I will\n              try to work towards.\n            </p>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6} className=\"overlay2\">\n            <div className=\"black3\"> Future Considerations</div>\n            <p className=\"section\">\n              This project was probably the most feature complete and playable\n              game I built since university. It was a good exercise for\n              planning, coding and execution. Quick code prototyping definitely\n              helps to put something together but it is necessary to identify what code should be generic, flexible and readable and re-write the code.\n              Hopefully, I can apply what I learned here to future projects!\n              <br />\n              <label>Thank you for reading!</label>\n            </p>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default ProjectAutoBattler;\n"]},"metadata":{},"sourceType":"module"}